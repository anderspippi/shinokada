#!/usr/bin/env bash

set -eu

# shellcheck disable=SC2034
VERSION="0.0.2"

readlinkf() {
    [ "${1:-}" ] || return 1
    max_symlinks=40
    CDPATH='' # to avoid changing to an unexpected directory

    target=$1
    [ -e "${target%/}" ] || target=${1%"${1##*[!/]}"} # trim trailing slashes
    [ -d "${target:-/}" ] && target="$target/"

    cd -P . 2>/dev/null || return 1
    while [ "$max_symlinks" -ge 0 ] && max_symlinks=$((max_symlinks - 1)); do
        if [ ! "$target" = "${target%/*}" ]; then
            case $target in
            /*) cd -P "${target%/*}/" 2>/dev/null || break ;;
            *) cd -P "./${target%/*}" 2>/dev/null || break ;;
            esac
            target=${target##*/}
        fi

        if [ ! -L "$target" ]; then
            target="${PWD%/}${target:+/}${target}"
            printf '%s\n' "${target:-/}"
            return 0
        fi
        link=$(ls -dl -- "$target" 2>/dev/null) || break
        target=${link#*" $target -> "}
    done
    return 1
}

self=$(readlinkf "$0")
script_dir=${self%/*}

# shellcheck disable=SC1091
{
    . "${script_dir}/lib/getoptions.sh"
    . "${script_dir}/lib/clip.sh"
}

check_cmd() {
    if [[ ! $(command -v "$1") ]]; then
        if [[ $1 = "code" ]]; then
            app="VS Code"
        else
            app=$1
        fi
        echo "It seems like you don't have ${app}."
        echo "Please install ${app}."
        exit 1
    fi
}

check_cmd wkhtmltoimage

if [ $# -gt 0 ]; then
    cmd=$1
    shift
    case $cmd in
    clip)
        eval "$(getoptions parser_definition_clip parse "$0")"
        parse "$@"
        eval "set -- $REST"
        fn_clip "$@"
        ;;

    --) ;; # no subcommand, arguments only
    esac
fi
